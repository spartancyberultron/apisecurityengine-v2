const mongoose = require('mongoose');
const Ticket = require('./ticket.model');

const activeScanVulnerabilitySchema = new mongoose.Schema({
 
  activeScan: { 
        type: mongoose.Schema.Types.ObjectId,
        ref: 'ActiveScan',
  },
  vulnerability: { 
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Vulnerability',
  },  
  endpoint: { 
    type: mongoose.Schema.Types.ObjectId,
    ref: 'ApiEndpoint',
  },  
  description:{
    type: String, 
  },  
  riskAcceptance:{
    type: String, 
  },
  riskAcceptanceReason:{
    type: String, 
  },
  findings:{
    type: [String], 
  },
  sslFindings:{
    type: [Object], 
  },
  additionalCWEs:{
    type: [String], 
  }
},{
  timestamps: true,
});

// Middleware to create a ticket after saving an ActiveScanVulnerability record
activeScanVulnerabilitySchema.post('save', async function(doc) {

  try {
    // Populate the vulnerability reference
    await doc.populate('vulnerability').execPopulate();

     // Populate the activeScan reference
     await doc.populate({
      path: 'activeScan',
      populate: {
        path: 'user', // Assuming the 'user' field in 'ActiveScan' references the 'User' model
        populate: {
          path: 'organization' // Assuming the 'organization' field in 'User' references the 'Organization' model
        }
      }
    }).execPopulate();

    // Create the ticket
    const ticket = new Ticket({
      title: doc.vulnerability.vulnerabilityName, // Assuming vulnerability has a vulnerabilityName field
      description: `${doc.description} ${doc.findings.join(', ')}`,
      source: 'REST API Scan',
      category:'Security Vulnerability',
      organization: doc.activeScan.user.organization._id, // Reference to the Organization
      scanId: doc.activeScan._id // Reference to the ActiveScan
    });

    // Save the ticket
    await ticket.save();
  } catch (err) {
    console.error('Error creating ticket:', err);
  }
});

const ActiveScanVulnerability = mongoose.model('ActiveScanVulnerability', activeScanVulnerabilitySchema);

module.exports = ActiveScanVulnerability;


