const mongoose = require('mongoose');
const Ticket = require('./ticket.model'); // Adjust the path as needed

const sbomScanVulnerabilitySchema = new mongoose.Schema({
  sbomScan: { 
    type: mongoose.Schema.Types.ObjectId,
    ref: 'SBOMScan',
  },  
  package: {
    type: String, 
  }, 
  description: {
    type: String, 
  },
  title: {
    type: String, 
  },
  cwe: {
    type: String, 
  },
  cve: {
    type: String, 
  },
  severity: {
    type: String, 
  }
}, {
  timestamps: true,
});

// Middleware to create a ticket after saving an SBOMScanVulnerability record
sbomScanVulnerabilitySchema.post('save', async function(doc) {
  try {
    // Populate sbomScan and its nested fields
    const populatedDoc = await doc.populate({
      path: 'sbomScan',
      populate: {
        path: 'orgProject',
        populate: {
          path: 'organization',
          populate: {
            path: 'primaryUser'
          }
        }
      }
    }).execPopulate();

    // Extract populated fields
    const sbomScan = populatedDoc.sbomScan;
    const orgProject = sbomScan.orgProject;
    const organization = orgProject.organization;
    const primaryUser = organization.primaryUser;

    // Create the ticket
    const ticket = new Ticket({
      title: doc.title || 'No Title', // Use the title from SBOMScanVulnerability
      description: `${doc.description} CWE: ${doc.cwe || 'N/A'}, CVE: ${doc.cve || 'N/A'}, Severity: ${doc.severity || 'Unknown'}`,
      source: 'SBOM Scan',
      category: 'Security Vulnerability',
      organization: organization._id, // Use the _id of the organization
      scanId: sbomScan._id, // Use sbomScan._id as the scanId
      status: 'OPEN',
      priority: doc.severity,
      openedBy: primaryUser // Use primaryUser from the organization
    });

    // Save the ticket
    await ticket.save();
  } catch (err) {
    console.error('Error creating ticket:', err);
  }
});


const SBOMScanVulnerability = mongoose.model('SBOMScanVulnerability', sbomScanVulnerabilitySchema);

module.exports = SBOMScanVulnerability;
