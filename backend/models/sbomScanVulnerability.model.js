const mongoose = require('mongoose');
const Ticket = require('./ticket.model'); // Adjust the path as needed

const sbomScanVulnerabilitySchema = new mongoose.Schema({
  sbomScan: { 
    type: mongoose.Schema.Types.ObjectId,
    ref: 'SBOMScan',
  },  
  package: {
    type: String, 
  }, 
  description: {
    type: String, 
  },
  title: {
    type: String, 
  },
  cwe: {
    type: String, 
  },
  cve: {
    type: String, 
  },
  severity: {
    type: String, 
  }
}, {
  timestamps: true,
});

// Middleware to create a ticket after saving an SBOMScanVulnerability record
sbomScanVulnerabilitySchema.post('save', async function(doc) {
  
  try {
    // Populate the sbomScan reference to access its user and _id
    const scan = await doc.populate('sbomScan').execPopulate();

    // Create the ticket
    const ticket = new Ticket({
      title: doc.title || 'No Title', // Use the title from SBOMScanVulnerability
      description: `${doc.description} CWE: ${doc.cwe}, CVE: ${doc.cve}, Severity: ${doc.severity}`,
      source: 'SBOM Scan',
      category: 'Security Vulnerability',
      organization: scan.sbomScan.user.organization, // Assuming user has an organization field
      scanId: scan.sbomScan._id // Use sbomScan._id as the scanId
    });

    // Save the ticket
    await ticket.save();
  } catch (err) {
    console.error('Error creating ticket:', err);
  }
});

const SBOMScanVulnerability = mongoose.model('SBOMScanVulnerability', sbomScanVulnerabilitySchema);

module.exports = SBOMScanVulnerability;
